@model IEnumerable<TwitR.Models.Tweet>

@{
    ViewData["Title"] = "Anasayfa";
}

<div class="row">
    <div class="col-md-9">
        @*Tweet Atma Butonu*@
        <span class="text-warning d-block font-weight-bold" id="warnTweetSendBtn"></span><br />
        <button type="button" id="btnTweetSend" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#tweetSendModal">
            Tweet At
        </button>
    </div>
    <div class="col-md-3">
        @*Giriş Yap Butonu*@
        <div class="text-right btn-lg" id="loginIfo">
            <button type="button" class="btn btn-success btn-lg" data-toggle="modal" data-target="#userLoginModal">Giriş Yap</button>
        </div>
    </div>
</div>

<br>

@*Atılan Tweetler*@
<div id="tweetList">
</div>

@*BEGIN MODALS*@
@*Tweet Atma Modal*@
<div class="modal fade" tabindex="-1" role="dialog" id="tweetSendModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Tweet At</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <textarea class="form-control" id="tweetSendText" rows="4"></textarea>
                    <span class="float-right" id="tweetWarn"></span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="tweetSend">Gönder</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Vazgeç</button>
            </div>
        </div>
    </div>
</div>

@*Login Modal*@
<div class="modal fade" tabindex="-1" role="dialog" id="userLoginModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Giriş Yap</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <input type="text" class="form-control" id="inputUserName" placeholder="Kullanıcı Adı" />
                    <span id="userNameLengthWarn" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" id="inputFirstName" placeholder="Adınız" />
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" id="inputLastName" placeholder="Soyadınız" />
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" id="inputAge" placeholder="Yaşınız" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnLogin">Giriş Yap</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Vazgeç</button>
            </div>
        </div>
    </div>
</div>

@*Kullanıcı Detayı Modal*@
<div class="modal fade" tabindex="-1" role="dialog" id="modalUserDetails">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Kullanıcı Bilgileri</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-3">
                        <p class="mb-0">Kullanıcı Adı</p>
                    </div>
                    <div class="col-sm-9">
                        <p class="text-muted mb-0" id="detailUserName">-</p>
                    </div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-3">
                        <p class="mb-0">Adı</p>
                    </div>
                    <div class="col-sm-9">
                        <p class="text-muted mb-0" id="detailFirstName">Ad girilmemiş</p>
                    </div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-3">
                        <p class="mb-0">Soyadı</p>
                    </div>
                    <div class="col-sm-9">
                        <p class="text-muted mb-0" id="detailLastName">Soyad girilmemiş</p>
                    </div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-3">
                        <p class="mb-0">Yaşı</p>
                    </div>
                    <div class="col-sm-9">
                        <p class="text-muted mb-0" id="detailAge">Yaş girilmemiş</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>

        // Kayıtlı Tüm Tweet'leri Yükleme Function'u
        function loadTweetList(connection) {
            connection.invoke("GetTweetList");
            connection.on("ReceieveAllTweets", function(tweetList) {
                tweetList.forEach(function(item, index) {
                    let htmlAllTweets = '';
                    htmlAllTweets += `<div class="card border-primary mb-3 w-100">
                                    <div class="card-header">
                                        <a data-toggle="modal" href="#modalUserDetails" class="btnUserDetails" data-id="${item.user.userName}">
                                            ${item.user.userName}
                                        </a>
                                    </div>
                                    <div class="card-body text-primary" style="height:75px;">
                                        <p class="card-text w-100">${item.tweetText}</p>
                                    </div>
                                </div>`;

                    $("#tweetList").prepend(htmlAllTweets);
                });
            });
        }


        // BEGIN "document.ready"
        $(document).ready(function() {

            let userName = null;
            let user = null;
            var connection = new signalR.HubConnectionBuilder().withHubProtocol(new signalR.JsonHubProtocol()).withUrl("/TweetHub").build();

            // Başlangıçtaki Buton Durumları
            $("#btnTweetSend").prop('disabled', true);
            $("#btnLogin").prop('disabled', true);

            // Bağlantıyı başlatma
            connection.start().then(() => {
                loadTweetList(connection);
            }).catch(function(err) {
                console.error(err);
            });

            $('#tweetSendModal').on('shown.bs.modal', function() {
                let charachterLimit;
                connection.invoke("GetTweetCharacterLimit");

                connection.on("RecievedCharacterLimit", (limit) => {
                    charachterLimit = limit;
                });

                $('#tweetSendText').on("input", function() {
                    let tweetTextLength = $("#tweetSendText").val().length;

                    $("#tweetWarn").text(`Karakter Sayısı Hakkı: ${charachterLimit - tweetTextLength}`);

                    if (tweetTextLength <= 0) {
                        $("#tweetSend").prop("disabled", true);
                    }
                    else if (tweetTextLength > charachterLimit) {
                        $("#tweetWarn").removeClass("text-danger").addClass("text-danger");
                        $("#tweetSend").prop("disabled", true);
                    }
                    else {
                        $("#tweetWarn").removeClass("text-danger").addClass("text-success");
                        $("#tweetSend").prop("disabled", false);
                    }
                });
            })

            // Tweet Gönderme
            $("#tweetSend").click(function() {

                let tweetText = $("#tweetSendText").val();
                let tweet = {
                    "tweetText": tweetText,
                    "user": user
                };

                let model = JSON.stringify(tweet);

                $.ajax({
                    type: "POST",
                    url: "/Tweet/Index",
                    data: {
                        'model': model
                    },
                    success: function(res) {
                        if (res.isSuccessful) {
                            htmlTweetCreate();
                        }
                    }
                })
                $("#tweetSendModal").modal("hide");
                $("#tweetSendText").val('');
            });

            // Tweet Gönderme Butonu Aktifliği
            if (userName == null) {
                $("#btnTweetSend").prop('disabled', true);
                $("#warnTweetSendBtn").text("Tweet atabilmek için giriş yapınız");
            }

            // Kullanıcı Giriş Click İşlemi
            $("#btnLogin").click(function() {
                userName = $("#inputUserName").val();
                let firstName = $("#inputFirstName").val();
                let lastName = $("#inputLastName").val();
                let age = $("#inputAge").val();

                user = {
                    'UserName': userName,
                    'FirstName': firstName,
                    'LastName': lastName,
                    'Age': age
                };

                if (user != null) {
                    connection.invoke("AddLoginUserList", user).then(function() {
                        $("#btnTweetSend").prop('disabled', false);
                        $("#warnTweetSendBtn").removeClass("d-block").addClass("d-none");
                    });
                }

                $("#userLoginModal").modal("hide");
                $("#loginIfo").html(`<span class="h4">${userName}</span>`);
            });

            // Kullanıcı Giriş Modal'ında UserName Girerken
            $('#userLoginModal').on('shown.bs.modal', function() {
                $('#inputUserName').on("input", function() {
                    loginUserNameChange($("#inputUserName").val())
                });
            });

            // Kullanıcı Detay Göster Click'i
            $(".btnUserDetails").click(function() {
                let userName = $(this).data('id');
                connection.invoke("UserDetailByUserName", userName).catch((err) => {
                    console.log(err);
                });
            });

            // Kullanıcı Detayı Görüntüleme Modal'ı
            $(document).on("click", ".btnUserDetails", function() {
                let userNameValue = $(this).data('id');
                connection.invoke("UserDetailByUserName", userNameValue).catch((err) => {
                    console.log(err);
                });

                connection.on("ReceiveUserDetail", function(user) {
                    $("#modalUserDetails #detailUserName").text(user.userName);
                    if (user.firstName != '') {
                        $("#modalUserDetails #detailFirstName").text(user.firstName);
                    }
                    if (user.firstName != '') {
                        $("#modalUserDetails #detailLastName").text(user.lastName);
                    }
                    if (user.firstName != '') {
                        $("#modalUserDetails #detailAge").text(user.age);
                    }
                });
            });

            //BEGIN FUCTINONS

            function loginUserNameChange(username) {
                if (username.length < 3) {
                    $("#btnLogin").prop('disabled', true);
                    $("#userNameLengthWarn").text("Kullanıcı adınız en az 3 karakter olmalıdır");
                }
                else {
                    $("#btnLogin").prop('disabled', false);
                    $("#userNameLengthWarn").text('');
                }
            }

            function htmlTweetCreate() {
                connection.on("ReceiveTweet", function(tweet) {
                    let html = '';
                    html += `<div class="card border-primary mb-3 w-100" id="${randomTweetId}">
                                <div class="card-header">
                                    <div class="main-item" style="width:100%;">
                                        <div class="animated-background" style="width:200px;">
                                            <div class="background-masker"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body text-primary" style="height:75px;">
                                    <div class="main-item" style="width:100%;">
                                        <div class="animated-background">
                                                <div class="background-masker" style="width:100%></div>
                                        </div>
                                    </div>
                                </div>
                            </div>`;

                    $("#tweetList").prepend(html);

                    setTimeout(function() { replaceTweet(tweet, randomTweetId) }, 2500);

                });
            }

            function replaceTweet(data, tweetId) {
                let newHtml = '';
                newHtml += `<div class="card border-primary mb-3 w-100">
                                <div class="card-header">
                                    <a data-toggle="modal" href="#modalUserDetails" class="btnUserDetails" data-id="${data.user.userName}" ${data.user.userName}
                                    </a>
                                </div>
                                <div class="card-body text-primary" style="height:75px;">
                                    <p class="card-text w-100">${data.tweetText}</p>
                                </div>
                            </div>`;

                let tweetIdString = `#${tweetId}`;
                $(tweetIdString).replaceWith(newHtml);
            }
            //END FUCTINONS
        });
        //END "document.ready"
    </script>
    }
