@{
    ViewData["Title"] = "Anasayfa";
}

<div class="row">
    <div class="col-md-8">
        @*Tweet Atma Butonu*@
        <span class="text-warning d-block font-weight-bold" id="warnTweetSendBtn"></span><br />
        <button type="button" id="btnModalTweetSend" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#modalTweetSend">
            Tweet Gönder
        </button>
    </div>
    <div class="col-md-2">
        @*Mesaj Gönder Butonu*@
        <div class="text-right">
            <button type="button" id="btnModalMessageSend" class="btn btn-success btn-lg" data-toggle="modal" data-target="#modalMessageSend">
                Mesaj Gönder
            </button>
        </div>
    </div>
    <div class="col-md-2">
        @*Giriş Yap Butonu*@
        <div class="text-right" id="userInfo">
            <button type="button" class="btn btn-success btn-lg" data-toggle="modal" data-target="#modalUserLogin">
                Giriş Yap
            </button>
        </div>
    </div>
</div>

<br>


@*Atılan Tweetler*@
<div class="row">
    <div class="col-md-8">
        <div id="tweetList">
        </div>
    </div>
    <div class="col-md-4">
        <ul class="list-group" id="messageList">
        </ul>
    </div>
</div>


@*BEGIN MODALS*@
@*Tweet Atma Modal*@
<div class="modal fade" tabindex="-1" role="dialog" id="modalTweetSend">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Tweet At</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <textarea class="form-control" id="inputTweetText" rows="4"></textarea>
                    <span class="float-right" id="tweetCharachterLimitWarn"></span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnTweetSend">Gönder</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Vazgeç</button>
            </div>
        </div>
    </div>
</div>

@*Login Modal*@
<div class="modal fade" tabindex="-1" role="dialog" id="modalUserLogin">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Giriş Yap</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <input type="text" class="form-control" id="inputUserName" placeholder="Kullanıcı Adı" />
                    <span id="userNameLengthWarn" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" id="inputFirstName" placeholder="Adınız" />
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" id="inputLastName" placeholder="Soyadınız" />
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" id="inputAge" placeholder="Yaşınız" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnUserLogin">Giriş Yap</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Vazgeç</button>
            </div>
        </div>
    </div>
</div>

@*Kullanıcı Detayı Modal*@
<div class="modal fade" tabindex="-1" role="dialog" id="modalUserDetails">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Kullanıcı Bilgileri</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-3">
                        <p class="mb-0">Kullanıcı Adı</p>
                    </div>
                    <div class="col-sm-9">
                        <p class="text-muted mb-0" id="detailUserName">-</p>
                    </div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-3">
                        <p class="mb-0">Adı</p>
                    </div>
                    <div class="col-sm-9">
                        <p class="text-muted mb-0" id="detailFirstName">Ad girilmemiş</p>
                    </div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-3">
                        <p class="mb-0">Soyadı</p>
                    </div>
                    <div class="col-sm-9">
                        <p class="text-muted mb-0" id="detailLastName">Soyad girilmemiş</p>
                    </div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-sm-3">
                        <p class="mb-0">Yaşı</p>
                    </div>
                    <div class="col-sm-9">
                        <p class="text-muted mb-0" id="detailAge">Yaş girilmemiş</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

@*Mesaj Gönder Modal*@
<div class="modal fade" tabindex="-1" role="dialog" id="modalMessageSend">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Mesaj Gönder</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <h5>Mesaj göndereceğiniz kişiyi seçiniz</h5>
                    <select class="form-control" id="userLoggedList">
                    </select>
                </div>
                <div class="form-group">
                    <textarea class="form-control" id="messageSendText" rows="4"></textarea>
                    <span class="float-right" id="tweetCharachterLimitWarn"></span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnMessageSend">Gönder</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Vazgeç</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>


        function htmlTweetTemplate(tweet) {
            let html = '';
            html += `<div class="card border-primary mb-3 w-100">
                        <div class="card-header">
                            <a data-toggle="modal" href="#modalUserDetails" class="btnUserDetails" data-id="${tweet.user.userName}">
                                ${tweet.user.userName}
                            </a>
                        </div>
                        <div class="card-body text-primary" style="height:75px;">
                            <p class="card-text w-100">${tweet.tweetText}</p>
                        </div>
                    </div>`;

            return html;
        }

        // Kayıtlı Tüm Tweet'leri Yükleme Function'u
        function loadTweetList(connection) {

            connection.invoke("GetTweets");

            connection.on("ReceieveAllTweets", function(tweetList) {

                let htmlAllTweets = '';

                $.each(tweetList, function(index, tweet) {
                    htmlAllTweets += htmlTweetTemplate(tweet);
                });

                $("#tweetList").append(htmlAllTweets);
            });
        }


        // BEGIN "document.ready"
        $(document).ready(function() {

            let userName = null;
            let userLogged = null;
            let userConnectionId = '';
            var connection = new signalR.HubConnectionBuilder().withHubProtocol(new signalR.JsonHubProtocol()).withUrl("/TweetHub").build();

            // Başlangıçtaki Buton Durumları
            $("#btnModalTweetSend").prop('disabled', true);
            $("#btnUserLogin").prop('disabled', true);

            // Bağlantıyı başlatma
            connection.start().then(() => {
                loadTweetList(connection);
            }).catch(function(err) {
                console.error(err);
            });

            connection.on("ReceiveConnnectionId", (connectionId) => {
                userConnectionId = connectionId;
            });


            // Tweet Gönderme Modal'ı
            $('#modalTweetSend').on('shown.bs.modal', function() {

                let charachterLimit;

                connection.invoke("GetTweetCharacterLimit");

                connection.on("RecievedCharacterLimit", (limit) => {
                    charachterLimit = limit;
                });

                $('#inputTweetText').on("input", function() {

                    let tweetTextLength = $("#inputTweetText").val().length;

                    $("#tweetCharachterLimitWarn").text(`Kalan Karakter Sayısı: ${charachterLimit - tweetTextLength}`);

                    if (tweetTextLength <= 0) {
                        $("#btnTweetSend").prop("disabled", true);
                    }
                    else if (tweetTextLength > charachterLimit) {
                        $("#tweetCharachterLimitWarn").removeClass("text-danger").addClass("text-danger");
                        $("#btnTweetSend").prop("disabled", true);
                    }
                    else {
                        $("#tweetCharachterLimitWarn").removeClass("text-danger").addClass("text-success");
                        $("#btnTweetSend").prop("disabled", false);
                    }
                });
            });


            // Mesaj Gönderme Modal'ı
            $('#modalMessageSend').on('shown.bs.modal', function() {

                $("#userLoggedList").html('');
                $('#btnMessageSend').prop("disabled", true);
                connection.invoke("GetUsers");

                connection.on("GetUsers", (users) => {
                    $("#userLoggedList").html('');
                    $.each(users, function(index, user) {
                        if (userLogged.id != user.id) {
                            $("#userLoggedList").append(`<option value="${user.id}">${user.userName}</option>`);
                        }
                    });
                });

                $('#messageSendText').on("input", function() {

                    if ($("#messageSendText").val().length <= 0) {
                        $("#btnMessageSend").prop("disabled", true);
                    }
                    else {
                        $("#btnMessageSend").prop("disabled", false);
                    }
                });

                // Mesaj Gönderme Click'i
                $("#btnMessageSend").click(function() {

                    let messageSendText = $("#messageSendText").val();
                    let toUserId = $("#userLoggedList option").val();

                    let message = {
                        "Text": messageSendText,
                        "FromUserId": userLogged.id,
                        "ToUserId": toUserId
                    };


                    groupName = `${userLogged.id}_${toUserId}`;
                    connection.invoke("AddToMessageGroup", groupName, toUserId);

                    $.ajax({
                        type: "POST",
                        url: "/api/Tweets/AddMessage",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: JSON.stringify(message),
                        success: function() {
                        }
                    });
                });
            });

            connection.on("ReceiveMessage", function(addedMessage, fromUserName) {
                let html = '';
                html += `<li class="list-group-item">${addedMessage.text} -${fromUserName}</li>`;
                $("#messageList").append(html);
                $("#modalMessageSend").modal("hide");
                $("#messageSendText").val('');
            });


            // Tweet Gönderme
            $("#btnTweetSend").click(function() {

                let tweetText = $("#inputTweetText").val();

                let tweet = {
                    "tweetText": tweetText,
                    "userId": userLogged.id,
                    "user": userLogged
                };

                $.ajax({
                    type: "POST",
                    url: "/api/Tweets/AddTweet",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify(tweet),
                    success: function(res) {
                        htmlTweetCreateLoading(res.responseAddedTweetId);
                    }
                })
                $("#modalTweetSend").modal("hide");
                $("#inputTweetText").val('');
            });

            // Tweet ve Mesaj Gönderme Butonu Aktifliği
            if (userName == null) {
                $("#btnModalTweetSend").prop('disabled', true);
                $("#btnModalMessageSend").prop('disabled', true);
                $("#warnTweetSendBtn").text("Tweet gönderebilmek için giriş yapınız");
            }

            // Kullanıcı Giriş Click İşlemi
            $("#btnUserLogin").click(function() {

                userName = $("#inputUserName").val();
                let firstName = $("#inputFirstName").val();
                let lastName = $("#inputLastName").val();
                let age = $("#inputAge").val();

                userLogged = {
                    "UserName": userName,
                    "FirstName": firstName,
                    "LastName": lastName,
                    "Age": age
                };

                if (userLogged != null) {
                    $.ajax({
                        type: "POST",
                        url: "/api/Tweets/AddUser?connId=" + userConnectionId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: JSON.stringify(userLogged),
                        success: function() {
                            $("#btnModalTweetSend").prop('disabled', false);
                            $('#btnModalMessageSend').prop("disabled", false);
                            $("#warnTweetSendBtn").removeClass("d-block").addClass("d-none");
                            $("#modalUserLogin").modal("hide");
                            $("#userInfo").html(`<span class="h4">${userName}</span>`);
                        },
                        error: function(err) {
                            console.log(err);
                        }
                    });
                }
            });

            // Kullanıcı Giriş Modal'ında UserName Girerken
            $('#modalUserLogin').on('shown.bs.modal', function() {
                $('#inputUserName').on("input", function() {
                    loginUserNameChange($("#inputUserName").val())
                });
            });

            // User DB'ye eklendikten sonra Id değerini alma
            connection.on("AddUser", function(addedUser) {
                userLogged.id = addedUser.id;
            });


            // Kullanıcı Detayı Görüntüleme Modal'ı
            $(document).on("click", ".btnUserDetails", function() {

                let userNameValue = $(this).data('id');

                connection.invoke("UserDetailByUserName", userNameValue).catch((err) => {
                    console.log(err);
                });

                connection.on("ReceiveUserDetails", function(userLogged) {

                    $("#modalUserDetails #detailUserName").text(userLogged.userName);

                    if (userLogged.firstName != '') {
                        $("#modalUserDetails #detailFirstName").text(userLogged.firstName);
                    }
                    if (userLogged.firstName != '') {
                        $("#modalUserDetails #detailLastName").text(userLogged.lastName);
                    }
                    if (userLogged.firstName != '') {
                        $("#modalUserDetails #detailAge").text(userLogged.age);
                    }
                });
            });

            // BEGIN FUCTINONS
            // User login modal'ında "UserName" değerini girerken uzunluk kontrolü
            function loginUserNameChange(username) {
                if (username.length < 3) {
                    $("#btnUserLogin").prop('disabled', true);
                    $("#userNameLengthWarn").text("Kullanıcı adınız en az 3 karakter olmalıdır");
                }
                else {
                    $("#btnUserLogin").prop('disabled', false);
                    $("#userNameLengthWarn").text('');
                }
            }

            // Tweet gönderildikten sonra component yüklenmesi
            function htmlTweetCreateLoading(tweetId) {

                connection.on("ReceiveTweet", function(tweet) {

                    let html = '';
                    html += `<div class="card border-primary mb-3 w-100" id="${tweetId}">
                                        <div class="card-header">
                                            <div class="main-item" style="width:100%;">
                                                <div class="animated-background" style="width:200px;">
                                                    <div class="background-masker"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="card-body text-primary" style="height:75px;">
                                            <div class="main-item" style="width:100%;">
                                                <div class="animated-background">
                                                        <div class="background-masker" style="width:100%></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>`;

                    $("#tweetList").prepend(html);

                    setTimeout(function() { htmlTweetLoadingReplace(tweet, tweetId) }, 2500);

                });
            }

            function htmlTweetLoadingReplace(data, tweetId) {
                let htmlChanged = htmlTweetTemplate(data);

                $(`#${tweetId}`).replaceWith(htmlChanged);
            }
            //END FUCTINONS
        });                                                                                                                                                //END "document.ready"
    </script>
    }
